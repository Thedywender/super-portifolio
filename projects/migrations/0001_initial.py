# Generated by Django 4.2.3 on 2024-05-15 13:32

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import projects.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CertifyingInstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ],
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ],
                    ),
                ),
                (
                    "github",
                    models.URLField(
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ]
                    ),
                ),
                (
                    "linkedin",
                    models.URLField(
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ]
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=30,
                        unique=True,
                        validators=[projects.validators.validate_not_empty],
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ],
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="usermodel_set", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        related_name="usermodel_set", to="auth.permission"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50,
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        max_length=500,
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ],
                    ),
                ),
                (
                    "github_url",
                    models.URLField(
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ]
                    ),
                ),
                (
                    "keyword",
                    models.CharField(
                        max_length=50,
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ],
                    ),
                ),
                (
                    "key_skill",
                    models.CharField(
                        max_length=50,
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ],
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="projects.profile",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="profile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="projects.usermodel",
            ),
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        validators=[
                            projects.validators.validate_not_empty,
                            projects.validators.validate_max_length,
                        ],
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "certifying_institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificates",
                        to="projects.certifyinginstitution",
                    ),
                ),
                (
                    "profiles",
                    models.ManyToManyField(
                        related_name="certificates", to="projects.profile"
                    ),
                ),
            ],
        ),
    ]
